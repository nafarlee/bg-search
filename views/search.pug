- 
  const orders = {
    id: 'ID',
    primary_name: 'Name',
    rating_votes: 'Number of Ratings',
    average_rating: 'Average Rating',
    bayes_rating: 'Geek Rating',
    rating_deviation: 'Rating Deviation',
    average_weight: 'Weight',
    weight_votes: 'Number of Weight Ratings',
    year: 'Release Year',
    age: 'Minimum Age',
    minimum_players: 'Minimum Players',
    maximum_players: 'Maximum Players',
    minimum_playtime: 'Minimum Playtime',
    maximum_playtime: 'Maximum Playtime',
  };

doctype html

html
  head
    link(rel="stylesheet", href="https://fonts.googleapis.com/css?family=Roboto:300,300italic,700,700italic")
    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.css")
    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/milligram/1.4.1/milligram.css")
    link(rel="stylesheet", type="text/css", href="/style.css")

  body
    form(style="display: flex; align-items: baseline;" method="get" action="/search")
      input(
        style="flex-grow: 1"
        spellcheck="false"
        autocomplete="off"
        autocapitalize="off"
        autocorrect="off"
        value=query
        type="search"
        mozactionhint="search"
        name="query"
      )
      .sort(style="margin: 1ex;")
        label(for="order") Sort
        select(name="order")
          each text, key in orders
            option(value=key selected= key == order) #{text}
      .direction
        label(for="direction") Direction
        select(name="direction")
          each text, key in { DESC: 'Descending', ASC: 'Ascending' }
            option(value=key selected= key == direction) #{text}

    if games.length === 0
      h1 No more results!
    else
      each game in games
        div(style="border-left: 2px solid black; padding-left: 1em;")
          h2
            a(href="/games/" + game.id) #{game.primary_name} (#{game.year})
      br

    if games.length === 25
      p
        a(href=nextURL) Next
