mixin details-list(heading, list)
  details
    summary= heading
    ul
      each item in list
        li= item


doctype html

html
  include includes/head.pug

  body(class="container")
    h1(class="center") #{game.primary_name} (#{game.year})

    h2
      a(href='https://boardgamegeek.com/boardgame/' + game.id) BGG

    h2
      a(href=game.image) Image

    if game.description
      details
        summary Description
        each paragraph in game.description.split('&#10;&#10;')
          p !{paragraph}

    details
      summary Rating
      ul
        li Votes: #{game.rating_votes}
        li Average: #{game.average_rating}
        li Bayes: #{game.bayes_rating}
        li Deviation: #{game.rating_deviation}

    details
      summary Playtime
      ul
        li Minimum: #{game.minimum_playtime}
        li Maximum: #{game.maximum_playtime}
        if game.median_playtime
          li Median: #{game.median_playtime}
        if game.median_playtimes_by_players
          ul
            if game.recorded_play_count
              li Number of Considered Plays: #{game.recorded_play_count}
            each median, players in game.median_playtimes_by_players
              li Median for #{players} player(s): #{median}

    details
      summary Players
      ul
        li Minimum: #{game.minimum_players}
        li Maximum: #{game.maximum_players}

    if game.player_recommendations
      details
        summary Player Recommendations
        ul
          each pr in sortByProperty(game.player_recommendations, 'players')
            - const total = pr.best + pr.recommended + pr.not_recommended
            li #{rangeToText(pr.players)}
              ul
                li Best: #{percentageOf(pr.best, total)} (#{pr.best})
                li Recommended: #{percentageOf(pr.recommended, total)} (#{pr.recommended})
                li Not Recommended: #{percentageOf(pr.not_recommended, total)} (#{pr.not_recommended})

    details
      summary Weight
      ul
        li Votes: #{game.weight_votes}
        li Average: #{game.average_weight}

    if game.categories
      +details-list('Categories', game.categories)

    if game.mechanics
      +details-list('Mechanics', game.mechanics)

    if game.families
      +details-list('Families', game.families)

    if game.designers
      +details-list('Designers', game.designers)

    if game.publishers
      +details-list('Publishers', game.publishers)

    if game.artists
      +details-list('Artists', game.artists)

    if game.alternate_names
      +details-list('Alternate Names', game.alternate_names)
